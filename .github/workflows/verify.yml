name: Verify
on:
  push:
    branches:
      - master
  pull_request:

permissions:
  contents: write

jobs:
  lighthouse:
    name: Lighthouse report
    runs-on: ubuntu-latest
    if: |
      github.ref == 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: treosh/lighthouse-ci-action@v11
        with:
          urls: |
            https://simpleicons.org/
            https://simpleicons.org/preview/
          uploadArtifacts: true
          temporaryPublicStorage: true

  run:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Lint
            command: lint
            runs-on: ubuntu-latest
          - name: Chrome Desktop${{ github.ref == 'refs/heads/master' && ' and publish' || '' }}
            command: test
            browser: chrome
            project: chrome-desktop
            runs-on: ubuntu-22.04
          - name: MsEdge Desktop
            command: test
            browser: msedge
            project: msedge-desktop
            runs-on: ubuntu-22.04
          - name: Firefox Desktop
            command: test
            browser: firefox
            project: firefox-desktop
            runs-on: ubuntu-22.04
          - name: Safari Desktop
            command: test
            browser: webkit
            project: webkit-desktop
            runs-on: ubuntu-22.04
          - name: Chromium Mobile
            command: test
            browser: chromium
            project: chromium-mobile
            runs-on: ubuntu-22.04
          - name: Chromium Mobile Landscape
            command: test
            browser: chromium
            project: chromium-mobile-landscape
            runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get toolchain config
        id: toolchain
        uses: ./.github/actions/get-toolchain
      - name: Setup Rust
        uses: hecrj/setup-rust-action@v2
        with:
          rust-version: ${{ steps.toolchain.outputs.channel }}
          targets: wasm32-unknown-unknown
          profile: ${{ matrix.command == 'test' && 'minimal' || 'default' }}
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ matrix.command }}-${{ steps.toolchain.outputs.channel }}
      - name: Use Node.js v20
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-v20
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install tooling dependencies
        run: cargo install cargo-make
      - name: Install Node.js dependencies
        run: npm ci --ignore-scripts --no-audit --no-fund
      - name: Build
        run: cargo make build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Playwright browsers
        if: matrix.command == 'test'
        run: npx playwright install ${{ matrix.browser }} --with-deps
      - name: Get test arguments
        id: args
        run: |
          echo "arguments=${{ matrix.command == 'test' && '--project=$PROJECT --reporter=github' || '' }}" \
            >> $GITHUB_OUTPUT
        env:
          PROJECT: ${{ matrix.project }}
      - name: List tests
        if: matrix.command == 'test'
        working-directory: end2end
        run: npx playwright test --list ${{ steps.args.outputs.arguments }}
      - name: Run `cargo make ${{ matrix.command }}`
        run: cargo make ${{ matrix.command }} ${{ steps.args.outputs.arguments }}
      - name: Publish website
        if: |
          matrix.command == 'test' &&
          matrix.project == 'chrome-desktop' &&
          github.ref == 'refs/heads/master'
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: app/dist
          single-commit: true
          clean-exclude: CNAME
          git-config-name: github-actions[bot]
          git-config-email: github-actions[bot]@users.noreply.github.com
